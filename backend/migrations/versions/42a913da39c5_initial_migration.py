"""initial migration

Revision ID: 42a913da39c5
Revises: 
Create Date: 2025-07-11 11:55:01.819253

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '42a913da39c5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('attendances_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['id'])

    with op.batch_alter_table('behaviors', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('behaviors_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'employees', ['employee_id'], ['id'])

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('employees_ibfk_1'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('role')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role', mysql.ENUM('ADMIN', 'USER', charset='utf8mb4', collation='utf8mb4_0900_ai_ci'), nullable=False))

    with op.batch_alter_table('employees', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('employees_ibfk_1'), 'users', ['user_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('behaviors', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('behaviors_ibfk_1'), 'employees', ['employee_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    with op.batch_alter_table('attendances', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('attendances_ibfk_1'), 'employees', ['employee_id'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')

    # ### end Alembic commands ###
